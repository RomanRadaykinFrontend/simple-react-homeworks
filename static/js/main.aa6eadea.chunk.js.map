{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Error404.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/common/img/preloader.svg","p2-homeworks/h5/Header.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior+.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","p2-homeworks/h10/bll/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","className","s","errorPage","Message","props","message","avatarBlock","src","avatar","alt","messageBlock","name","messageAndTime","time","messageData","HW1","Affair","affairWrapper","affair","onClick","deleteAffairCallback","_id","buttonStyle","Affairs","mappedAffairs","data","map","a","key","affairsButtonsWrapper","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","item","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","notError","appWrapper","appContent","formWrapper","placeholder","value","onChange","errorMessage","count","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","newUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","inputStyle","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","superEditableSpan","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","initState","status","loadingAC","payload","HW10","dispatch","useDispatch","loading","useSelector","useEffect","setTimeout","preloader","console","log","SuperSelect","options","onChangeOption","mappedOptions","index","MenuItem","Select","cl","styleSelect","SuperRadio","o","i","arr","HW7","homeWorkReducer","action","sort","b","age","initialPeople","HW8","people","setPeople","finalPeople","p","Clock","timerId","setTimerId","date","setDate","show","setShow","stop","clearInterval","stringTime","getHours","getMinutes","getSeconds","stringDate","getDate","getMonth","getFullYear","onMouseEnter","onMouseLeave","id","window","setInterval","newDate","Date","HW9","JuniorPlus","PATH","Routes","path","exact","render","to","Junior","Header","navLinks","HW5","App","reducers","combineReducers","store","createStore","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.aa6eadea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1VHKS\",\"error\":\"Greeting_error__1MttT\",\"notError\":\"Greeting_notError__3Yoqm\",\"appWrapper\":\"Greeting_appWrapper__2fkt5\",\"appContent\":\"Greeting_appContent__3k4gg\",\"count\":\"Greeting_count__Z0bMK\",\"formWrapper\":\"Greeting_formWrapper__2zMFW\",\"errorMessage\":\"Greeting_errorMessage__2YADQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1FlBJ\",\"avatarBlock\":\"Message_avatarBlock__1wyPN\",\"messageBlock\":\"Message_messageBlock__35u39\",\"name\":\"Message_name__-y43F\",\"messageAndTime\":\"Message_messageAndTime__j-n2U\",\"time\":\"Message_time__2rMbx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairWrapper\":\"Affairs_affairWrapper__Bvsfx\",\"buttonStyle\":\"Affairs_buttonStyle__1JFWi\",\"affairsButtonsWrapper\":\"Affairs_affairsButtonsWrapper__2UsDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__JJr1V\",\"errorInput\":\"SuperInputText_errorInput__163AJ\",\"error\":\"SuperInputText_error__2ISRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputStyle\":\"HW4_inputStyle__2T85c\",\"column\":\"HW4_column__dq_eO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__pliTt\",\"default\":\"SuperButton_default__3bJnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3xbdB\",\"spanClassName\":\"SuperCheckbox_spanClassName__2emwz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Lhqy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorPage\":\"Error404_errorPage__3-uiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superEditableSpan\":\"SuperEditableSpan_superEditableSpan__NkM5E\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.5970da8b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLinks\":\"Header_navLinks__23gix\"};","import React from \"react\";\r\nimport s from '../Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.errorPage}>\r\n            <h1>404</h1>\r\n            <span>Page not found!</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\r\nimport s from './Message.module.css'\r\n\r\ntype MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={s.message}>\r\n\r\n            <div className={s.avatarBlock}>\r\n                <img src={props.avatar} alt='avatar'/>\r\n            </div>\r\n\r\n            <div className={s.messageBlock}>\r\n                <div className={s.name}>\r\n                    <b> {props.name} </b>\r\n                </div>\r\n\r\n                <div className={s.messageAndTime}>\r\n                    <div>\r\n                        {props.message}\r\n                    </div>\r\n\r\n                    <div className={s.time}>\r\n                        {props.time}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Some Name\",\r\n    message: \"some text\",\r\n    time: \"22:00\"\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    };// need to fix\r\n\r\n    return (\r\n        <div className={s.affairWrapper}>\r\n            <div>\r\n                {props.affair.name}\r\n            </div>\r\n\r\n\r\n            <button onClick={deleteCallback} className={s.buttonStyle}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    }; // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    };\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    };\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    };\r\n\r\n    return (\r\n        <div className={s.affairsButtonsWrapper}>\r\n\r\n            {mappedAffairs}\r\n            <div>\r\n                <button onClick={setAll}>All</button>\r\n                <button onClick={setHigh}>High</button>\r\n                <button onClick={setMiddle}>Middle</button>\r\n                <button onClick={setLow}>Low</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\nimport {Simulate} from \"react-dom/test-utils\";\r\n\r\n// types\r\nexport type AffairPriorityType = string; // need to fix any +\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n} // need to fix any +\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any +\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any +\r\n    if (filter === \"all\") {\r\n        return affairs;\r\n    } else if (filter === 'high'){\r\n        let result = affairs.filter(item => item.priority === 'high');\r\n        return result\r\n    } else if (filter === 'middle'){\r\n        let result = affairs.filter(item => item.priority === 'middle');\r\n        return result\r\n    } else if (filter === 'low'){\r\n        let result = affairs.filter(item => item.priority === 'low');\r\n        return result\r\n    } else {\r\n        return affairs;\r\n    }\r\n\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any +\r\n    return affairs.filter(item => item._id !== _id)\r\n\r\n\r\n    // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any +\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any =\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n\r\n    const inputClass = (error !== '') ? s.error : s.notError; // need to fix with (?:)\r\n\r\n\r\n    return (\r\n        <div className={s.appWrapper}>\r\n            <div className={s.appContent}>\r\n                <div className={s.formWrapper}>\r\n                    <input placeholder='Enter your name' value={name} onChange={setNameCallback} className={inputClass}/>\r\n                    <button onClick={addUser}>add</button>\r\n                </div>\r\n\r\n                <div className={s.errorMessage}>\r\n                    <span>{error}</span>\r\n                </div>\r\n                <div className={s.count}>\r\n                    <span>{totalUsers}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\"); // need to fix any\r\n    const [error, setError] = useState<string>(\"\"); // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value); // need to fix\r\n    };\r\n    const addUser = () => {\r\n        if(name !== ''){\r\n            addUserCallback(name);\r\n            alert(`Hello, ${name}!`);\r\n            setName('');\r\n            setError('')\r\n        } else {\r\n            setError('The name field cannot be empty!')\r\n        }\r\n    };\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport { v1 } from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const newUser: UserType = {\r\n            _id: v1(),\r\n            name: name\r\n        }\r\n        const newUsers: Array<UserType> = [newUser, ...users]\r\n        setUsers(newUsers); // need to fix\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput :  s.superInput} ${className} `\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeChecked ? onChangeCallback : onChange}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    className={s.inputStyle} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    /*red // пропсу с булевым значением не обязательно указывать true*/\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState, ChangeEvent} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.superEditableSpan} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        setValue(restoreState<string>(\"editable-span-value\", value));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\nimport HW5 from \"../HW5\";\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n            <HW6/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import { AppStoreType } from \"./store\";\r\n\r\nconst initState = {\r\n    status: false\r\n};\r\n\r\nexport type StateType = typeof initState\r\n\r\nexport const loadingReducer = (state: StateType = initState , action: loadingACType): StateType => { // fix any\r\n    switch (action.type) {\r\n        case \"LOADING\": {\r\n            return {...state, status: action.payload.status};\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\ntype loadingACType = {\r\n    type: 'LOADING',\r\n    payload: {\r\n        status: boolean\r\n    }\r\n}\r\n\r\nexport const loadingAC = (status: boolean): loadingACType => ({type: 'LOADING', payload: {status}});","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport { loadingAC, StateType } from \"./bll/loadingReducer\";\r\nimport { AppStoreType } from \"./bll/store\";\r\nimport preloader from './../common/img/preloader.svg'\r\n\r\nfunction HW10() {\r\n    // useSelector, useDispatch\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.loading.status)\r\n\r\n    const setLoading = () => {\r\n        // dispatch\r\n        dispatch(loadingAC(!loading))\r\n        // setTimeout\r\n        console.log(\"loading...\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            //console.log(loading.status)\r\n            dispatch(loadingAC(!loading))\r\n        }, 2000)\r\n    }, [loading]);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {loading\r\n                ? (\r\n                    <div>\r\n                        <img src={preloader} alt=\"крутилка\"/>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW10;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\nimport cl from '../../HW7.module.css'\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {Select} from \"@material-ui/core\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((item, index) => {\r\n        return <MenuItem value={item} key={'name' + \"-\" + index}>\r\n            {item}\r\n        </MenuItem>\r\n    }) : [] // map options with key\r\n\r\n    const onChangeCallback = (e: React.ChangeEvent<any>) => {\r\n        if (onChangeOption) {\r\n            onChangeOption(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Select className={cl.styleSelect} onChange={onChangeCallback}>\r\n            {mappedOptions}\r\n        </Select>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport {FormControlLabel, FormControlLabelProps, Radio} from \"@material-ui/core\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: React.ChangeEvent<any>) => {\r\n        if(onChangeOption){\r\n            onChangeOption(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n    //ChangeEvent<HTMLInputElement>\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + \"-\" + i}>\r\n            {/*<input\r\n                type={\"radio\"}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n                name={'name - ' + i}\r\n                checked={value === o}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}*/}\r\n\r\n            <FormControlLabel value={o}\r\n                              control={<Radio />}\r\n                              label={o}\r\n                              onChange={onChangeCallback}\r\n                              name={'name - ' + i}\r\n                              checked={value === o}/>\r\n\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {useState} from \"react\";\r\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = [\"x\", \"y\", \"z\"];\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={\"radio\"}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW7;\r\n","export const homeWorkReducer = (state: any, action: any): any => {\r\n    switch (action.type) {\r\n        case \"sort\": {\r\n           return action.payload === 'up'\r\n               ? [...state].sort((a,b) => {\r\n               if(a.name > b.name){\r\n                   return 1\r\n               } else {\r\n                   return -1\r\n               }\r\n           })\r\n               :[...state].sort((a,b) => {\r\n               if(a.name < b.name){\r\n                   return 1\r\n               } else {\r\n                   return -1\r\n               }\r\n           })\r\n        }\r\n        case \"check\": {\r\n            return [...state].filter(item => item.age === action.payload)\r\n        }\r\n        default: return state\r\n    }\r\n};","import React, {useState} from \"react\";\r\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\nconst initialPeople = [\r\n    {_id: 0, name: \"Кот\", age: 3},\r\n    {_id: 1, name: \"Александр\", age: 66},\r\n    {_id: 2, name: \"Коля\", age: 16},\r\n    {_id: 3, name: \"Виктор\", age: 44},\r\n    {_id: 4, name: \"Дмитрий\", age: 40},\r\n    {_id: 5, name: \"Ирина\", age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState(initialPeople);\r\n\r\n    const finalPeople = people.map(p => (\r\n        <div key={p._id}>\r\n            {p._id}: {p.name}, {p.age} лет\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"up\"}))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"down\"}))\r\n    const checkAge = () => setPeople(homeWorkReducer(initialPeople, {type: \"check\", payload: 55}))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            {finalPeople}\r\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\r\n            <div><SuperButton onClick={checkAge}>check 55 years old</SuperButton></div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW8;\r\n","import React, {useState, MouseEvent} from \"react\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0);\r\n    const [date, setDate] = useState<Date>();\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    const stop = () => {\r\n        // stop\r\n        clearInterval(timerId)\r\n    }\r\n    const start = () => {\r\n        stop();\r\n        const id: number = window.setInterval(() => {\r\n            // setDate\r\n            let newDate = new Date();\r\n            setDate(newDate)\r\n        }, 1000);\r\n        setTimerId(id);\r\n    }\r\n\r\n    const onMouseEnter = (e: MouseEvent) => {\r\n        // show\r\n        if(e.type === 'mouseenter'){\r\n            setShow(true)\r\n        }\r\n    };\r\n    const onMouseLeave = (e: MouseEvent) => {\r\n        // close\r\n        if(e.type === 'mouseleave'){\r\n            setShow(false)\r\n        }\r\n    };\r\n\r\n    const stringTime = date ? `${date.getHours()} : ${date.getMinutes()} : ${date.getSeconds()}` : ''; // fix with date\r\n    const stringDate = date ? `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()} `: ''; // fix with date\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div>\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clock;\r\n","import React from \"react\";\r\nimport Clock from \"./Clock\";\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW9;\r\n","import React from \"react\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\n\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n","import React from \"react\";\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus;\r\n\r\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/Junior+\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUNIOR: \"/junior\",\r\n    JUNIOR_PLUS: \"/junior-plus\"\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR\r\n            exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                {/*// add routes*/}\r\n\r\n                {/*         у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {PATH} from \"./Routes\";\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.navLinks}>\r\n            <NavLink to={PATH.PRE_JUNIOR}> pre-junior </NavLink>\r\n            <NavLink to={PATH.JUNIOR}> junior </NavLink>\r\n            <NavLink to={PATH.JUNIOR_PLUS}> junior-plus </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n                <Header/>\r\n\r\n                <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/*<HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport {loadingReducer} from \"./loadingReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport store from \"./p2-homeworks/h10/bll/store\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}